{"ast":null,"code":"var _jsxFileName = \"/Users/tech16/Desktop/slot_machine/src/App.js\";\nimport React from \"react\";\nimport \"./dababy.mp3\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  createRef,\n  Component\n} = React;\n\nclass Slots extends Component {\n  constructor(props) {\n    super(props);\n\n    this.roll = () => {\n      this.setState({\n        rolling: true\n      });\n      setTimeout(() => {\n        this.setState({\n          rolling: false\n        });\n      }, 900);\n      this.slotRef.forEach((slot, i) => {\n        const selected = this.triggerSlotRotation(slot.current);\n        this.setState({\n          [`text${i + 1}`]: selected\n        });\n        console.log(this.setState({\n          [`text${i + 1}`]: selected\n        }));\n      });\n    };\n\n    this.getRandomInt = (min, max) => {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    };\n\n    this.triggerSlotRotation = ref => {\n      getRandomInt(0, 10);\n\n      function setTop(top) {\n        ref.style.top = `${top}px`;\n      }\n\n      let options = ref.children;\n      let randomOption = Math.floor(Math.random() * Slots.defaultProps.text.length);\n      setTop(triggerSlotRotation());\n      return Slots.defaultProps.text[randomOption];\n    };\n\n    this.state = {\n      text1: \"0\",\n      text2: \"0\",\n      text3: \"0\",\n      rolling: false\n    };\n    this.slotRef = [createRef(), createRef(), createRef()];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SlotMachine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            ref: this.slotRef[0],\n            children: Slots.defaultProps.text[0].map((texte, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: texte\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            ref: this.slotRef[1],\n            children: Slots.defaultProps.text[1].map((texte, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: texte\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            ref: this.slotRef[2],\n            children: Slots.defaultProps.text[2].map((texte, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: texte\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !this.state.rolling ? \"roll rolling\" : \"roll\",\n        onClick: !this.state.rolling && this.roll,\n        disabled: this.state.rolling,\n        children: this.state.rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSlots.defaultProps = {\n  text: [[\"ouïe\", \"toucher\", \"odorat\", \"la vue\", \"goût\"], [\"ouïe1\", \"toucher1\", \"odorat1\", \"la vue1\", \"goût1\"], [\"ouïe2\", \"toucher2\", \"odorat2\", \"la vue2\", \"goût2\"]]\n};\nexport default Slots;","map":{"version":3,"sources":["/Users/tech16/Desktop/slot_machine/src/App.js"],"names":["React","createRef","Component","Slots","constructor","props","roll","setState","rolling","setTimeout","slotRef","forEach","slot","i","selected","triggerSlotRotation","current","console","log","getRandomInt","min","max","Math","ceil","floor","random","ref","setTop","top","style","options","children","randomOption","defaultProps","text","length","state","text1","text2","text3","render","map","texte"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./dababy.mp3\";\nimport \"./App.css\";\n\nconst { createRef, Component } = React;\n\nclass Slots extends Component {\n  static defaultProps = {\n    text: [[\"ouïe\", \"toucher\", \"odorat\", \"la vue\", \"goût\"], [\"ouïe1\", \"toucher1\", \"odorat1\", \"la vue1\", \"goût1\"], [\"ouïe2\", \"toucher2\", \"odorat2\", \"la vue2\", \"goût2\"]]\n  };\n  constructor(props) {\n    super(props);\n    this.state = { text1: \"0\", text2: \"0\", text3: \"0\", rolling: false };\n\n    this.slotRef = [createRef(), createRef(), createRef()]\n  }\n\n  roll = () => {\n    this.setState({\n      rolling: true\n    });\n    setTimeout(() => {\n      this.setState({rolling: false});\n    }, 900);\n\n    this.slotRef.forEach((slot, i) => {\n      const selected = this.triggerSlotRotation(slot.current);\n      this.setState({ [`text${i + 1}`]: selected});\n      console.log(this.setState({ [`text${i + 1}`]: selected}))\n    });\n  };\n  getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n  triggerSlotRotation = ref => { getRandomInt(0,10)\n    function setTop(top) {\n      ref.style.top = `${top}px`;\n    }\n    let options = ref.children;\n    let randomOption = Math.floor(Math.random() * Slots.defaultProps.text.length);\n    setTop(triggerSlotRotation());\n    return Slots.defaultProps.text[randomOption];\n  };\n  render() {\n    return (\n      <div className=\"SlotMachine\">\n        <div className=\"slot\">\n          <section>\n            <div className=\"container\" ref={this.slotRef[0]}>\n              {Slots.defaultProps.text[0].map((texte, i ) => (\n                <div key={i}>\n                  <span>{texte}</span>\n                </div>\n              ))}\n            </div>\n          </section>\n        </div>\n        <div className=\"slot\">\n          <section>\n            <div className=\"container\" ref={this.slotRef[1]}>\n              {Slots.defaultProps.text[1].map((texte, i ) => (\n                <div key={i}>\n                  <span>{texte}</span>\n                </div>\n              ))}\n            </div>\n          </section>\n        </div>\n        <div className=\"slot\">\n          <section>\n            <div className=\"container\" ref={this.slotRef[2]}>\n              {Slots.defaultProps.text[2].map((texte, i) => (\n                <div key={i}>\n                  <span>{texte}</span>\n                </div>\n              ))}\n            </div>\n          </section>\n        </div>\n        <div\n          className={!this.state.rolling ? \"roll rolling\" : \"roll\"}\n          onClick={!this.state.rolling && this.roll}\n          disabled={this.state.rolling}\n        >\n          {this.state.rolling ? \"Rolling...\" : \"ROLL\"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slots;"]},"metadata":{},"sourceType":"module"}